---
name: Java CI and Dockerfile Validation
on:
  - push
jobs:
  build:
    runs-on: ubuntu-latest
    environment: env
    env:
      SS_USER: ${{ vars.SS_USER }}
      SS_PASSWORD: ${{ vars.SS_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Make Gradlew Executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
      - name: Build with Gradle (excluding a package)
        run: >
          echo 'sourceSets { test { java { exclude
          "com/example/workflowdockerimageactions/CONTROLLER/**" } } }' >>
          build.gradle
            ./gradlew build
  validate-compose:
    runs-on: ubuntu-latest
    environment: env
    env:
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ vars.DB_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set environment variables for Docker Compose
        run: |
          echo "DB_USER=${DB_USER}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
      - name: Validate Docker Compose Configuration
        run: |
          docker-compose -f docker-compose.yml config --quiet
  run-service:
    runs-on: ubuntu-latest
    environment: env
    env:
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ vars.DB_PASSWORD }}
      SS_USER: ${{ vars.SS_USER }}
      SS_PASSWORD: ${{ vars.SS_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Make Gradlew Executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
      - name: Add Custom Gradle Task
        run: >
          echo 'task buildWithExclusions(type: GradleBuild) { tasks = ["build",
          "testClasses"]; startParameter.excludedTaskNames = ["test"] }' >>
          build.gradle
      - name: Build with Gradle (excluding a package)
        run: |
          ./gradlew buildWithExclusions
      - name: Sleep
        run: sleep 30s
        shell: bash
      - name: Run all tests
        run: |
          ./gradlew test --tests
          "com.example.workflowdockerimageactions.CONTROLLER.TaskControllerTest"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    environment: env
    env:
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWOD: ${{ vars.DB_PASSWORD }}
    steps:
      - name: Deploy Your Application
        run: |
          # Deploy
  system-tests:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Run System Tests
        run: |
          # Do tests
  dockerize:
    runs-on: ubuntu-latest
    needs:
      - build
      - validate-compose
      - deploy
      - system-tests
    if: github.ref == 'refs/heads/master'
    environment: env
    env:
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWOD: ${{ vars.DB_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{
          secrets.DOCKER_PASSWORD }}
      - name: Build and Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml up -d
